unit LoginController;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, Data.DB, superobject,
  BaseController;

type
  TLoginController = class(TBaseController)
  public
    procedure index();
    procedure check();
    procedure checknum();
  end;

implementation

uses
  uTableMap;

procedure TLoginController.check();
var
  json: string;
  sdata, ret, wh: ISuperObject;
  username, pwd: string;
  sql: string;
begin
  ret := SO();
  with View do
  begin
    try
      username := Input('username');
      pwd := Input('pwd');
      Sessionset('username', username);
      json := Sessionget('username');
      wh := SO();
      wh.S['username'] := username;
      wh.S['pwd'] := pwd;
      sdata := Db.FindFirst(tb_users, wh);
      if (sdata <> nil) then
      begin
        json := sdata.AsString;
        Sessionset('username', username);
        Sessionset('name', sdata.S['name']);
        ret.I['code'] := 0;
        ret.S['message'] := 'µÇÂ¼³É¹¦';
      end
      else
      begin
        ret.I['code'] := -1;
        ret.S['message'] := 'µÇÂ¼Ê§°Ü';
      end;
      ShowJson(ret);
    except
      on e: Exception do
        ShowText(e.ToString);
    end;

  end;
end;

procedure TLoginController.checknum;
var
  num: string;
begin
  Randomize;
  num := inttostr(Random(9)) + inttostr(Random(9)) + inttostr(Random(9)) + inttostr(Random(9));
  View.ShowCheckIMG(num, 60, 30);
end;

procedure TLoginController.index();
begin
  with View do
  begin
  //  Db.Find(tb_users,'');
 // ShowHTML('hello');
  SessionRemove('ok');
    ShowHTML('Login');
  end;
end;

end.

